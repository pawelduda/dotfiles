set -g default-shell /bin/zsh
set -g default-terminal 'screen-256color'

# no delay after pressing esc key (useful for vim)
set -s escape-time 0

set-option -g prefix C-Space

setw -g mouse on

# use vi mode
set-window-option -g mode-keys vi

set -g set-clipboard off
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-a select-pane -l

# bind -r h select-pane -L
# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r l select-pane -R

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# bind h select-window -t :-
# bind l select-window -t :+
# bind-key -r C-h select-pane -L
# bind-key -r C-j select-pane -D
# bind-key -r C-k select-pane -U
# bind-key -r C-l select-pane -R

# soften status bar color from harsh green to light gray
set -g status-bg '#151515'
set -g status-fg '#A1B0B8'

# remove administrative debris (session name, hostname, time) in status bar
# set -g status-right ''

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
# set -g history-limit 20000

# window title in window bar
set -g set-titles on
set -g set-titles-string '#T'

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# setw -g aggressive-resize on

# improve colors
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'
# set -g window-style 'fg=colour247,bg=colour247'
# set -g window-active-style 'fg=colour250,bg=default'

# # set -g pane-border-fg colour250
# # set -g pane-border-bg default
# set-option -g pane-active-border-style "bg=default"
# set-option -ag pane-active-border-style "fg=colour250"

# customize right status to show prefix mode and nothig else
# set -g status-right ' #{?client_prefix,#[reverse]** TMUX PREFIX MODE **#[noreverse] ,}'

bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c '#{pane_current_path}' # Create new window

bind-key 'C-\' send-keys 'C-z' 'kill -9 %1' Enter
# bind-key 'C-\' send-keys 'C-z'; sleep 1; 'kill -9 %1' Enter

# List of plugins
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'laktak/extrakto'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'Morantron/tmux-fingers'

# Enter copy mode and search for errors with regex or word FATAL backwards *requires tmux-copycat
# set -g @copycat_search_C-e '([a-z]+Error([a-z]+)?|FATAL)'

# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-justify "centre"
# set-option -g status-left-length 60
# set-option -g status-right-length 90
# set-option -g status-left "#(~/.tmux/plugins/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.tmux/plugins/tmux-powerline/powerline.sh right)"
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
# set-window-option -g window-status-current-format "#[fg=colour235, bg=default]⮀#[fg=colour255, bg=default] #I ⮁ #W#[fg=colour27, bg=default]⮀"

# Make tmux-fingers yank into proper clipboard
# set -g @fingers-copy-command 'xclip -in -selection clipboard'
# set -g @fingers-copy-command-uppercase 'xclip -in -selection clipboard'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

set -g @extrakto_grab_area 'window full'

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g pane-border-status top

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

